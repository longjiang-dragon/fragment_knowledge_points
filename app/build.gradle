apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//apply plugin: 'com.gradle.learn'


android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.hujiang.designsupportlibrarydemo"
        minSdkVersion 26
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_TOOLCHAIN=clang'
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }
    sourceSets { //设置.so文件路径
        main {
            java.srcDirs = ['src/main/java']
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}


//println(Runtime.getRuntime().exec("git rev-parse --abbrev-ref HEAD").text)
//println("git rev-parse --abbrev-ref HEAD".execute().text.trim())
////map
//def testMap = ["name": "myDemo",
//               "age" : "111"]
//println testMap.age
//
////list
//def testList = ["list_123", "list_456"];
//println testList.get(0)
////for
//testMap.each {
//    print it
//}
//
//
//apply plugin: testaa
//
//class testaa implements Plugin<Project> {
//
//    @Override
//    void apply(Project project) {
////        print(getRootProject().project.buildDir.absolutePath)
//        println("test code")
//    }
//}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.android.material:material:1.1.0-alpha02'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview-selection:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.fragment:fragment:1.0.0'

    //lifecycles ,liveData ,viewModel
    implementation "androidx.lifecycle:lifecycle-runtime:2.1.0-alpha01"
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0-alpha01"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.1.0-alpha01"

    //room
    annotationProcessor "androidx.room:room-compiler:2.1.0-alpha03"
    implementation "androidx.room:room-runtime:2.1.0-alpha03"

    //butterknife
    implementation 'com.jakewharton:butterknife:10.0.0'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'

    //对rxjava的支持
    implementation "androidx.room:room-rxjava2:2.0.0-rc01"


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    //noinspection GradleCompatible
    implementation 'com.android.support:support-dynamic-animation:28.0.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

}
repositories {
    mavenCentral()
}

